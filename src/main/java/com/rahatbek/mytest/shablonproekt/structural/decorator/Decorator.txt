Шаблон: Декоратор (Decorator)
====================================================================================================================
Цель:

Динамические добавление новых обязанностей объекту.

====================================================================================================================

Для чего используется:

Используется в качестве альтернативы порождению подклассов для расширения функциональности.

====================================================================================================================
Пример использования:

- динамическое и понятное клиентам добавления обязанностей объектам;
- реализация обязанностей, которые могут быть сняты с объекта;
- расширение класса путем порождения подклассов невозможно по каким-либо причинам.

====================================================================================================================